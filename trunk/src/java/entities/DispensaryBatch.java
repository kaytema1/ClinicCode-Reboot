package entities;
// Generated Nov 29, 2013 11:26:33 AM by Hibernate Tools 3.2.1.GA


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * DispensaryBatch generated by hbm2java
 */
@Entity
@Table(name="dispensary_batch"
    ,catalog="extended"
)
public class DispensaryBatch  implements java.io.Serializable {


     private String itemBatch;
     private Invoice invoice;
     private DispensaryItems dispensaryItems;
     private int quantityReceived;
     private int quantityOnHand;
     private Date dateReceived;
     private Date expiryDate;
     private double purchasePrice;
     private double sellingPrice;
     private double receivedValue;
     private double valueOnHand;
     private Set<GeneralStockMovement> generalStockMovements = new HashSet<GeneralStockMovement>(0);
     private Set<PatientTreatmentBatch> patientTreatmentBatchs = new HashSet<PatientTreatmentBatch>(0);

    public DispensaryBatch() {
    }

	
    public DispensaryBatch(String itemBatch, Invoice invoice, DispensaryItems dispensaryItems, int quantityReceived, int quantityOnHand, Date dateReceived, Date expiryDate, double purchasePrice, double sellingPrice, double receivedValue, double valueOnHand) {
        this.itemBatch = itemBatch;
        this.invoice = invoice;
        this.dispensaryItems = dispensaryItems;
        this.quantityReceived = quantityReceived;
        this.quantityOnHand = quantityOnHand;
        this.dateReceived = dateReceived;
        this.expiryDate = expiryDate;
        this.purchasePrice = purchasePrice;
        this.sellingPrice = sellingPrice;
        this.receivedValue = receivedValue;
        this.valueOnHand = valueOnHand;
    }
    public DispensaryBatch(String itemBatch, Invoice invoice, DispensaryItems dispensaryItems, int quantityReceived, int quantityOnHand, Date dateReceived, Date expiryDate, double purchasePrice, double sellingPrice, double receivedValue, double valueOnHand, Set<GeneralStockMovement> generalStockMovements, Set<PatientTreatmentBatch> patientTreatmentBatchs) {
       this.itemBatch = itemBatch;
       this.invoice = invoice;
       this.dispensaryItems = dispensaryItems;
       this.quantityReceived = quantityReceived;
       this.quantityOnHand = quantityOnHand;
       this.dateReceived = dateReceived;
       this.expiryDate = expiryDate;
       this.purchasePrice = purchasePrice;
       this.sellingPrice = sellingPrice;
       this.receivedValue = receivedValue;
       this.valueOnHand = valueOnHand;
       this.generalStockMovements = generalStockMovements;
       this.patientTreatmentBatchs = patientTreatmentBatchs;
    }
   
     @Id 
    
    @Column(name="item_batch", unique=true, nullable=false, length=100)
    public String getItemBatch() {
        return this.itemBatch;
    }
    
    public void setItemBatch(String itemBatch) {
        this.itemBatch = itemBatch;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="invoice_id", nullable=false)
    public Invoice getInvoice() {
        return this.invoice;
    }
    
    public void setInvoice(Invoice invoice) {
        this.invoice = invoice;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="item_code", nullable=false)
    public DispensaryItems getDispensaryItems() {
        return this.dispensaryItems;
    }
    
    public void setDispensaryItems(DispensaryItems dispensaryItems) {
        this.dispensaryItems = dispensaryItems;
    }
    
    @Column(name="quantity_received", nullable=false)
    public int getQuantityReceived() {
        return this.quantityReceived;
    }
    
    public void setQuantityReceived(int quantityReceived) {
        this.quantityReceived = quantityReceived;
    }
    
    @Column(name="quantity_on_hand", nullable=false)
    public int getQuantityOnHand() {
        return this.quantityOnHand;
    }
    
    public void setQuantityOnHand(int quantityOnHand) {
        this.quantityOnHand = quantityOnHand;
    }
    @Temporal(TemporalType.DATE)
    @Column(name="date_received", nullable=false, length=10)
    public Date getDateReceived() {
        return this.dateReceived;
    }
    
    public void setDateReceived(Date dateReceived) {
        this.dateReceived = dateReceived;
    }
    @Temporal(TemporalType.DATE)
    @Column(name="expiry_date", nullable=false, length=10)
    public Date getExpiryDate() {
        return this.expiryDate;
    }
    
    public void setExpiryDate(Date expiryDate) {
        this.expiryDate = expiryDate;
    }
    
    @Column(name="purchase_price", nullable=false, precision=22, scale=0)
    public double getPurchasePrice() {
        return this.purchasePrice;
    }
    
    public void setPurchasePrice(double purchasePrice) {
        this.purchasePrice = purchasePrice;
    }
    
    @Column(name="selling_price", nullable=false, precision=22, scale=0)
    public double getSellingPrice() {
        return this.sellingPrice;
    }
    
    public void setSellingPrice(double sellingPrice) {
        this.sellingPrice = sellingPrice;
    }
    
    @Column(name="received_value", nullable=false, precision=22, scale=0)
    public double getReceivedValue() {
        return this.receivedValue;
    }
    
    public void setReceivedValue(double receivedValue) {
        this.receivedValue = receivedValue;
    }
    
    @Column(name="value_on_hand", nullable=false, precision=22, scale=0)
    public double getValueOnHand() {
        return this.valueOnHand;
    }
    
    public void setValueOnHand(double valueOnHand) {
        this.valueOnHand = valueOnHand;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="dispensaryBatch")
    public Set<GeneralStockMovement> getGeneralStockMovements() {
        return this.generalStockMovements;
    }
    
    public void setGeneralStockMovements(Set<GeneralStockMovement> generalStockMovements) {
        this.generalStockMovements = generalStockMovements;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="dispensaryBatch")
    public Set<PatientTreatmentBatch> getPatientTreatmentBatchs() {
        return this.patientTreatmentBatchs;
    }
    
    public void setPatientTreatmentBatchs(Set<PatientTreatmentBatch> patientTreatmentBatchs) {
        this.patientTreatmentBatchs = patientTreatmentBatchs;
    }




}


