package entities;
// Generated Nov 29, 2013 11:26:33 AM by Hibernate Tools 3.2.1.GA


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Pharmacyorder generated by hbm2java
 */
@Entity
@Table(name="pharmacyorder"
    ,catalog="extended"
)
public class Pharmacyorder  implements java.io.Serializable {


     private String orderId;
     private Stafftable stafftableByStaffId;
     private Stafftable stafftableByPharmacist;
     private Stafftable stafftableByDispensedBy;
     private ClientInfo clientInfo;
     private Date dispensedDate;
     private Date date;
     private double totalCost;
     private double amountPaid;
     private double outstandingAmount;
     private String paymentStatus;
     private String requestedBy;
     private Integer visitId;
     private Boolean discounted;
     private Set<Patienttreatment> patienttreatments = new HashSet<Patienttreatment>(0);

    public Pharmacyorder() {
    }

	
    public Pharmacyorder(String orderId, Date date, double totalCost, double amountPaid, double outstandingAmount, String requestedBy) {
        this.orderId = orderId;
        this.date = date;
        this.totalCost = totalCost;
        this.amountPaid = amountPaid;
        this.outstandingAmount = outstandingAmount;
        this.requestedBy = requestedBy;
    }
    public Pharmacyorder(String orderId, Stafftable stafftableByStaffId, Stafftable stafftableByPharmacist, Stafftable stafftableByDispensedBy, ClientInfo clientInfo, Date dispensedDate, Date date, double totalCost, double amountPaid, double outstandingAmount, String paymentStatus, String requestedBy, Integer visitId, Boolean discounted, Set<Patienttreatment> patienttreatments) {
       this.orderId = orderId;
       this.stafftableByStaffId = stafftableByStaffId;
       this.stafftableByPharmacist = stafftableByPharmacist;
       this.stafftableByDispensedBy = stafftableByDispensedBy;
       this.clientInfo = clientInfo;
       this.dispensedDate = dispensedDate;
       this.date = date;
       this.totalCost = totalCost;
       this.amountPaid = amountPaid;
       this.outstandingAmount = outstandingAmount;
       this.paymentStatus = paymentStatus;
       this.requestedBy = requestedBy;
       this.visitId = visitId;
       this.discounted = discounted;
       this.patienttreatments = patienttreatments;
    }
   
     @Id 
    
    @Column(name="order_id", unique=true, nullable=false, length=100)
    public String getOrderId() {
        return this.orderId;
    }
    
    public void setOrderId(String orderId) {
        this.orderId = orderId;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="staff_id")
    public Stafftable getStafftableByStaffId() {
        return this.stafftableByStaffId;
    }
    
    public void setStafftableByStaffId(Stafftable stafftableByStaffId) {
        this.stafftableByStaffId = stafftableByStaffId;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="pharmacist")
    public Stafftable getStafftableByPharmacist() {
        return this.stafftableByPharmacist;
    }
    
    public void setStafftableByPharmacist(Stafftable stafftableByPharmacist) {
        this.stafftableByPharmacist = stafftableByPharmacist;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="dispensed_by")
    public Stafftable getStafftableByDispensedBy() {
        return this.stafftableByDispensedBy;
    }
    
    public void setStafftableByDispensedBy(Stafftable stafftableByDispensedBy) {
        this.stafftableByDispensedBy = stafftableByDispensedBy;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="client_info_id")
    public ClientInfo getClientInfo() {
        return this.clientInfo;
    }
    
    public void setClientInfo(ClientInfo clientInfo) {
        this.clientInfo = clientInfo;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="dispensed_date", length=19)
    public Date getDispensedDate() {
        return this.dispensedDate;
    }
    
    public void setDispensedDate(Date dispensedDate) {
        this.dispensedDate = dispensedDate;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="date", nullable=false, length=19)
    public Date getDate() {
        return this.date;
    }
    
    public void setDate(Date date) {
        this.date = date;
    }
    
    @Column(name="total_cost", nullable=false, precision=22, scale=0)
    public double getTotalCost() {
        return this.totalCost;
    }
    
    public void setTotalCost(double totalCost) {
        this.totalCost = totalCost;
    }
    
    @Column(name="amount_paid", nullable=false, precision=22, scale=0)
    public double getAmountPaid() {
        return this.amountPaid;
    }
    
    public void setAmountPaid(double amountPaid) {
        this.amountPaid = amountPaid;
    }
    
    @Column(name="outstanding_amount", nullable=false, precision=22, scale=0)
    public double getOutstandingAmount() {
        return this.outstandingAmount;
    }
    
    public void setOutstandingAmount(double outstandingAmount) {
        this.outstandingAmount = outstandingAmount;
    }
    
    @Column(name="payment_status", length=100)
    public String getPaymentStatus() {
        return this.paymentStatus;
    }
    
    public void setPaymentStatus(String paymentStatus) {
        this.paymentStatus = paymentStatus;
    }
    
    @Column(name="requested_by", nullable=false, length=100)
    public String getRequestedBy() {
        return this.requestedBy;
    }
    
    public void setRequestedBy(String requestedBy) {
        this.requestedBy = requestedBy;
    }
    
    @Column(name="visit_id")
    public Integer getVisitId() {
        return this.visitId;
    }
    
    public void setVisitId(Integer visitId) {
        this.visitId = visitId;
    }
    
    @Column(name="discounted")
    public Boolean getDiscounted() {
        return this.discounted;
    }
    
    public void setDiscounted(Boolean discounted) {
        this.discounted = discounted;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="pharmacyorder")
    public Set<Patienttreatment> getPatienttreatments() {
        return this.patienttreatments;
    }
    
    public void setPatienttreatments(Set<Patienttreatment> patienttreatments) {
        this.patienttreatments = patienttreatments;
    }




}


