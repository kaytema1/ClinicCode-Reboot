package entities;
// Generated Nov 29, 2013 11:26:33 AM by Hibernate Tools 3.2.1.GA


import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * GeneralStockMovement generated by hbm2java
 */
@Entity
@Table(name="general_stock_movement"
    ,catalog="extended"
)
public class GeneralStockMovement  implements java.io.Serializable {


     private Integer moveId;
     private Stafftable stafftableByIssuedBy;
     private DispensaryBatch dispensaryBatch;
     private Stafftable stafftableByIssuedTo;
     private PharmacyBatch pharmacyBatch;
     private Date dateOfMovement;
     private int quantityB4Transfer;
     private int quantityTransferred;
     private int quantityAfterTransfer;
     private String reason;

    public GeneralStockMovement() {
    }

	
    public GeneralStockMovement(Stafftable stafftableByIssuedBy, Date dateOfMovement, int quantityB4Transfer, int quantityTransferred, int quantityAfterTransfer, String reason) {
        this.stafftableByIssuedBy = stafftableByIssuedBy;
        this.dateOfMovement = dateOfMovement;
        this.quantityB4Transfer = quantityB4Transfer;
        this.quantityTransferred = quantityTransferred;
        this.quantityAfterTransfer = quantityAfterTransfer;
        this.reason = reason;
    }
    public GeneralStockMovement(Stafftable stafftableByIssuedBy, DispensaryBatch dispensaryBatch, Stafftable stafftableByIssuedTo, PharmacyBatch pharmacyBatch, Date dateOfMovement, int quantityB4Transfer, int quantityTransferred, int quantityAfterTransfer, String reason) {
       this.stafftableByIssuedBy = stafftableByIssuedBy;
       this.dispensaryBatch = dispensaryBatch;
       this.stafftableByIssuedTo = stafftableByIssuedTo;
       this.pharmacyBatch = pharmacyBatch;
       this.dateOfMovement = dateOfMovement;
       this.quantityB4Transfer = quantityB4Transfer;
       this.quantityTransferred = quantityTransferred;
       this.quantityAfterTransfer = quantityAfterTransfer;
       this.reason = reason;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)
    
    @Column(name="move_id", unique=true, nullable=false)
    public Integer getMoveId() {
        return this.moveId;
    }
    
    public void setMoveId(Integer moveId) {
        this.moveId = moveId;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="issued_by", nullable=false)
    public Stafftable getStafftableByIssuedBy() {
        return this.stafftableByIssuedBy;
    }
    
    public void setStafftableByIssuedBy(Stafftable stafftableByIssuedBy) {
        this.stafftableByIssuedBy = stafftableByIssuedBy;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="dispensary_batch_number")
    public DispensaryBatch getDispensaryBatch() {
        return this.dispensaryBatch;
    }
    
    public void setDispensaryBatch(DispensaryBatch dispensaryBatch) {
        this.dispensaryBatch = dispensaryBatch;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="issued_to")
    public Stafftable getStafftableByIssuedTo() {
        return this.stafftableByIssuedTo;
    }
    
    public void setStafftableByIssuedTo(Stafftable stafftableByIssuedTo) {
        this.stafftableByIssuedTo = stafftableByIssuedTo;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="pharmacy_batch_number")
    public PharmacyBatch getPharmacyBatch() {
        return this.pharmacyBatch;
    }
    
    public void setPharmacyBatch(PharmacyBatch pharmacyBatch) {
        this.pharmacyBatch = pharmacyBatch;
    }
    @Temporal(TemporalType.DATE)
    @Column(name="date_of_movement", nullable=false, length=10)
    public Date getDateOfMovement() {
        return this.dateOfMovement;
    }
    
    public void setDateOfMovement(Date dateOfMovement) {
        this.dateOfMovement = dateOfMovement;
    }
    
    @Column(name="quantity_b4_transfer", nullable=false)
    public int getQuantityB4Transfer() {
        return this.quantityB4Transfer;
    }
    
    public void setQuantityB4Transfer(int quantityB4Transfer) {
        this.quantityB4Transfer = quantityB4Transfer;
    }
    
    @Column(name="quantity_transferred", nullable=false)
    public int getQuantityTransferred() {
        return this.quantityTransferred;
    }
    
    public void setQuantityTransferred(int quantityTransferred) {
        this.quantityTransferred = quantityTransferred;
    }
    
    @Column(name="quantity_after_transfer", nullable=false)
    public int getQuantityAfterTransfer() {
        return this.quantityAfterTransfer;
    }
    
    public void setQuantityAfterTransfer(int quantityAfterTransfer) {
        this.quantityAfterTransfer = quantityAfterTransfer;
    }
    
    @Column(name="reason", nullable=false, length=65535)
    public String getReason() {
        return this.reason;
    }
    
    public void setReason(String reason) {
        this.reason = reason;
    }




}


