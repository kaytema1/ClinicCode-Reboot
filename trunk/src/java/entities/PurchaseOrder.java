package entities;
// Generated Nov 29, 2013 11:26:33 AM by Hibernate Tools 3.2.1.GA


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * PurchaseOrder generated by hbm2java
 */
@Entity
@Table(name="purchase_order"
    ,catalog="extended"
)
public class PurchaseOrder  implements java.io.Serializable {


     private Integer purchaseOrderId;
     private Stafftable stafftableByOrderingStaff;
     private Stafftable stafftableByApprovedByAccount;
     private Stafftable stafftableByApprovedByManager;
     private String location;
     private Date dateOfOrder;
     private String status;
     private Set<Invoice> invoices = new HashSet<Invoice>(0);
     private Set<PurchaseOrderItems> purchaseOrderItemses = new HashSet<PurchaseOrderItems>(0);

    public PurchaseOrder() {
    }

	
    public PurchaseOrder(Stafftable stafftableByOrderingStaff, String location, Date dateOfOrder, String status) {
        this.stafftableByOrderingStaff = stafftableByOrderingStaff;
        this.location = location;
        this.dateOfOrder = dateOfOrder;
        this.status = status;
    }
    public PurchaseOrder(Stafftable stafftableByOrderingStaff, Stafftable stafftableByApprovedByAccount, Stafftable stafftableByApprovedByManager, String location, Date dateOfOrder, String status, Set<Invoice> invoices, Set<PurchaseOrderItems> purchaseOrderItemses) {
       this.stafftableByOrderingStaff = stafftableByOrderingStaff;
       this.stafftableByApprovedByAccount = stafftableByApprovedByAccount;
       this.stafftableByApprovedByManager = stafftableByApprovedByManager;
       this.location = location;
       this.dateOfOrder = dateOfOrder;
       this.status = status;
       this.invoices = invoices;
       this.purchaseOrderItemses = purchaseOrderItemses;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)
    
    @Column(name="purchase_order_id", unique=true, nullable=false)
    public Integer getPurchaseOrderId() {
        return this.purchaseOrderId;
    }
    
    public void setPurchaseOrderId(Integer purchaseOrderId) {
        this.purchaseOrderId = purchaseOrderId;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ordering_staff", nullable=false)
    public Stafftable getStafftableByOrderingStaff() {
        return this.stafftableByOrderingStaff;
    }
    
    public void setStafftableByOrderingStaff(Stafftable stafftableByOrderingStaff) {
        this.stafftableByOrderingStaff = stafftableByOrderingStaff;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="approved_by_account")
    public Stafftable getStafftableByApprovedByAccount() {
        return this.stafftableByApprovedByAccount;
    }
    
    public void setStafftableByApprovedByAccount(Stafftable stafftableByApprovedByAccount) {
        this.stafftableByApprovedByAccount = stafftableByApprovedByAccount;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="approved_by_manager")
    public Stafftable getStafftableByApprovedByManager() {
        return this.stafftableByApprovedByManager;
    }
    
    public void setStafftableByApprovedByManager(Stafftable stafftableByApprovedByManager) {
        this.stafftableByApprovedByManager = stafftableByApprovedByManager;
    }
    
    @Column(name="location", nullable=false, length=100)
    public String getLocation() {
        return this.location;
    }
    
    public void setLocation(String location) {
        this.location = location;
    }
    @Temporal(TemporalType.DATE)
    @Column(name="date_of_order", nullable=false, length=10)
    public Date getDateOfOrder() {
        return this.dateOfOrder;
    }
    
    public void setDateOfOrder(Date dateOfOrder) {
        this.dateOfOrder = dateOfOrder;
    }
    
    @Column(name="status", nullable=false)
    public String getStatus() {
        return this.status;
    }
    
    public void setStatus(String status) {
        this.status = status;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="purchaseOrder")
    public Set<Invoice> getInvoices() {
        return this.invoices;
    }
    
    public void setInvoices(Set<Invoice> invoices) {
        this.invoices = invoices;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="purchaseOrder")
    public Set<PurchaseOrderItems> getPurchaseOrderItemses() {
        return this.purchaseOrderItemses;
    }
    
    public void setPurchaseOrderItemses(Set<PurchaseOrderItems> purchaseOrderItemses) {
        this.purchaseOrderItemses = purchaseOrderItemses;
    }




}


