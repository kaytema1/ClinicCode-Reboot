package entities;
// Generated Nov 29, 2013 11:26:33 AM by Hibernate Tools 3.2.1.GA


import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Stafftable generated by hbm2java
 */
@Entity
@Table(name="stafftable"
    ,catalog="extended"
)
public class Stafftable  implements java.io.Serializable {


     private String staffid;
     private String lastname;
     private String othername;
     private String ssn;
     private String gender;
     private String email;
     private String dob;
     private String placeofbirth;
     private String yearofemployment;
     private int role;
     private String extraduty;
     private String address;
     private String contact;
     private String nextofkin;
     private String nextofkincontact;
     private int unit;
     private String imglocation;
     private boolean active;
     private Set<PurchaseOrder> purchaseOrdersForOrderingStaff = new HashSet<PurchaseOrder>(0);
     private Set<Requisition> requisitionsForRequestApprovedBy = new HashSet<Requisition>(0);
     private Set<PurchaseOrder> purchaseOrdersForApprovedByAccount = new HashSet<PurchaseOrder>(0);
     private Set<Requisition> requisitionsForRequestedBy = new HashSet<Requisition>(0);
     private Set<Requisition> requisitionsForDeliveryApprovedBy = new HashSet<Requisition>(0);
     private Set<Requisition> requisitionsForDeliveredBy = new HashSet<Requisition>(0);
     private Set<GeneralStockMovement> generalStockMovementsForIssuedBy = new HashSet<GeneralStockMovement>(0);
     private Set<Invoice> invoices = new HashSet<Invoice>(0);
     private Set<GeneralStockMovement> generalStockMovementsForIssuedTo = new HashSet<GeneralStockMovement>(0);
     private Set<PurchaseOrder> purchaseOrdersForApprovedByManager = new HashSet<PurchaseOrder>(0);
     private Set<Pharmacyorder> pharmacyordersForStaffId = new HashSet<Pharmacyorder>(0);
     private Set<Pharmacyorder> pharmacyordersForDispensedBy = new HashSet<Pharmacyorder>(0);
     private Set<Pharmacyorder> pharmacyordersForPharmacist = new HashSet<Pharmacyorder>(0);

    public Stafftable() {
    }

	
    public Stafftable(String staffid, String lastname, int role, int unit, boolean active) {
        this.staffid = staffid;
        this.lastname = lastname;
        this.role = role;
        this.unit = unit;
        this.active = active;
    }
    public Stafftable(String staffid, String lastname, String othername, String ssn, String gender, String email, String dob, String placeofbirth, String yearofemployment, int role, String extraduty, String address, String contact, String nextofkin, String nextofkincontact, int unit, String imglocation, boolean active, Set<PurchaseOrder> purchaseOrdersForOrderingStaff, Set<Requisition> requisitionsForRequestApprovedBy, Set<PurchaseOrder> purchaseOrdersForApprovedByAccount, Set<Requisition> requisitionsForRequestedBy, Set<Requisition> requisitionsForDeliveryApprovedBy, Set<Requisition> requisitionsForDeliveredBy, Set<GeneralStockMovement> generalStockMovementsForIssuedBy, Set<Invoice> invoices, Set<GeneralStockMovement> generalStockMovementsForIssuedTo, Set<PurchaseOrder> purchaseOrdersForApprovedByManager, Set<Pharmacyorder> pharmacyordersForStaffId, Set<Pharmacyorder> pharmacyordersForDispensedBy, Set<Pharmacyorder> pharmacyordersForPharmacist) {
       this.staffid = staffid;
       this.lastname = lastname;
       this.othername = othername;
       this.ssn = ssn;
       this.gender = gender;
       this.email = email;
       this.dob = dob;
       this.placeofbirth = placeofbirth;
       this.yearofemployment = yearofemployment;
       this.role = role;
       this.extraduty = extraduty;
       this.address = address;
       this.contact = contact;
       this.nextofkin = nextofkin;
       this.nextofkincontact = nextofkincontact;
       this.unit = unit;
       this.imglocation = imglocation;
       this.active = active;
       this.purchaseOrdersForOrderingStaff = purchaseOrdersForOrderingStaff;
       this.requisitionsForRequestApprovedBy = requisitionsForRequestApprovedBy;
       this.purchaseOrdersForApprovedByAccount = purchaseOrdersForApprovedByAccount;
       this.requisitionsForRequestedBy = requisitionsForRequestedBy;
       this.requisitionsForDeliveryApprovedBy = requisitionsForDeliveryApprovedBy;
       this.requisitionsForDeliveredBy = requisitionsForDeliveredBy;
       this.generalStockMovementsForIssuedBy = generalStockMovementsForIssuedBy;
       this.invoices = invoices;
       this.generalStockMovementsForIssuedTo = generalStockMovementsForIssuedTo;
       this.purchaseOrdersForApprovedByManager = purchaseOrdersForApprovedByManager;
       this.pharmacyordersForStaffId = pharmacyordersForStaffId;
       this.pharmacyordersForDispensedBy = pharmacyordersForDispensedBy;
       this.pharmacyordersForPharmacist = pharmacyordersForPharmacist;
    }
   
     @Id 
    
    @Column(name="staffid", unique=true, nullable=false)
    public String getStaffid() {
        return this.staffid;
    }
    
    public void setStaffid(String staffid) {
        this.staffid = staffid;
    }
    
    @Column(name="lastname", nullable=false)
    public String getLastname() {
        return this.lastname;
    }
    
    public void setLastname(String lastname) {
        this.lastname = lastname;
    }
    
    @Column(name="othername")
    public String getOthername() {
        return this.othername;
    }
    
    public void setOthername(String othername) {
        this.othername = othername;
    }
    
    @Column(name="ssn")
    public String getSsn() {
        return this.ssn;
    }
    
    public void setSsn(String ssn) {
        this.ssn = ssn;
    }
    
    @Column(name="gender", length=10)
    public String getGender() {
        return this.gender;
    }
    
    public void setGender(String gender) {
        this.gender = gender;
    }
    
    @Column(name="email", length=100)
    public String getEmail() {
        return this.email;
    }
    
    public void setEmail(String email) {
        this.email = email;
    }
    
    @Column(name="dob")
    public String getDob() {
        return this.dob;
    }
    
    public void setDob(String dob) {
        this.dob = dob;
    }
    
    @Column(name="placeofbirth")
    public String getPlaceofbirth() {
        return this.placeofbirth;
    }
    
    public void setPlaceofbirth(String placeofbirth) {
        this.placeofbirth = placeofbirth;
    }
    
    @Column(name="yearofemployment", length=4)
    public String getYearofemployment() {
        return this.yearofemployment;
    }
    
    public void setYearofemployment(String yearofemployment) {
        this.yearofemployment = yearofemployment;
    }
    
    @Column(name="role", nullable=false)
    public int getRole() {
        return this.role;
    }
    
    public void setRole(int role) {
        this.role = role;
    }
    
    @Column(name="extraduty")
    public String getExtraduty() {
        return this.extraduty;
    }
    
    public void setExtraduty(String extraduty) {
        this.extraduty = extraduty;
    }
    
    @Column(name="address")
    public String getAddress() {
        return this.address;
    }
    
    public void setAddress(String address) {
        this.address = address;
    }
    
    @Column(name="contact")
    public String getContact() {
        return this.contact;
    }
    
    public void setContact(String contact) {
        this.contact = contact;
    }
    
    @Column(name="nextofkin")
    public String getNextofkin() {
        return this.nextofkin;
    }
    
    public void setNextofkin(String nextofkin) {
        this.nextofkin = nextofkin;
    }
    
    @Column(name="nextofkincontact")
    public String getNextofkincontact() {
        return this.nextofkincontact;
    }
    
    public void setNextofkincontact(String nextofkincontact) {
        this.nextofkincontact = nextofkincontact;
    }
    
    @Column(name="unit", nullable=false)
    public int getUnit() {
        return this.unit;
    }
    
    public void setUnit(int unit) {
        this.unit = unit;
    }
    
    @Column(name="imglocation")
    public String getImglocation() {
        return this.imglocation;
    }
    
    public void setImglocation(String imglocation) {
        this.imglocation = imglocation;
    }
    
    @Column(name="active", nullable=false)
    public boolean isActive() {
        return this.active;
    }
    
    public void setActive(boolean active) {
        this.active = active;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="stafftableByOrderingStaff")
    public Set<PurchaseOrder> getPurchaseOrdersForOrderingStaff() {
        return this.purchaseOrdersForOrderingStaff;
    }
    
    public void setPurchaseOrdersForOrderingStaff(Set<PurchaseOrder> purchaseOrdersForOrderingStaff) {
        this.purchaseOrdersForOrderingStaff = purchaseOrdersForOrderingStaff;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="stafftableByRequestApprovedBy")
    public Set<Requisition> getRequisitionsForRequestApprovedBy() {
        return this.requisitionsForRequestApprovedBy;
    }
    
    public void setRequisitionsForRequestApprovedBy(Set<Requisition> requisitionsForRequestApprovedBy) {
        this.requisitionsForRequestApprovedBy = requisitionsForRequestApprovedBy;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="stafftableByApprovedByAccount")
    public Set<PurchaseOrder> getPurchaseOrdersForApprovedByAccount() {
        return this.purchaseOrdersForApprovedByAccount;
    }
    
    public void setPurchaseOrdersForApprovedByAccount(Set<PurchaseOrder> purchaseOrdersForApprovedByAccount) {
        this.purchaseOrdersForApprovedByAccount = purchaseOrdersForApprovedByAccount;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="stafftableByRequestedBy")
    public Set<Requisition> getRequisitionsForRequestedBy() {
        return this.requisitionsForRequestedBy;
    }
    
    public void setRequisitionsForRequestedBy(Set<Requisition> requisitionsForRequestedBy) {
        this.requisitionsForRequestedBy = requisitionsForRequestedBy;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="stafftableByDeliveryApprovedBy")
    public Set<Requisition> getRequisitionsForDeliveryApprovedBy() {
        return this.requisitionsForDeliveryApprovedBy;
    }
    
    public void setRequisitionsForDeliveryApprovedBy(Set<Requisition> requisitionsForDeliveryApprovedBy) {
        this.requisitionsForDeliveryApprovedBy = requisitionsForDeliveryApprovedBy;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="stafftableByDeliveredBy")
    public Set<Requisition> getRequisitionsForDeliveredBy() {
        return this.requisitionsForDeliveredBy;
    }
    
    public void setRequisitionsForDeliveredBy(Set<Requisition> requisitionsForDeliveredBy) {
        this.requisitionsForDeliveredBy = requisitionsForDeliveredBy;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="stafftableByIssuedBy")
    public Set<GeneralStockMovement> getGeneralStockMovementsForIssuedBy() {
        return this.generalStockMovementsForIssuedBy;
    }
    
    public void setGeneralStockMovementsForIssuedBy(Set<GeneralStockMovement> generalStockMovementsForIssuedBy) {
        this.generalStockMovementsForIssuedBy = generalStockMovementsForIssuedBy;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="stafftable")
    public Set<Invoice> getInvoices() {
        return this.invoices;
    }
    
    public void setInvoices(Set<Invoice> invoices) {
        this.invoices = invoices;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="stafftableByIssuedTo")
    public Set<GeneralStockMovement> getGeneralStockMovementsForIssuedTo() {
        return this.generalStockMovementsForIssuedTo;
    }
    
    public void setGeneralStockMovementsForIssuedTo(Set<GeneralStockMovement> generalStockMovementsForIssuedTo) {
        this.generalStockMovementsForIssuedTo = generalStockMovementsForIssuedTo;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="stafftableByApprovedByManager")
    public Set<PurchaseOrder> getPurchaseOrdersForApprovedByManager() {
        return this.purchaseOrdersForApprovedByManager;
    }
    
    public void setPurchaseOrdersForApprovedByManager(Set<PurchaseOrder> purchaseOrdersForApprovedByManager) {
        this.purchaseOrdersForApprovedByManager = purchaseOrdersForApprovedByManager;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="stafftableByStaffId")
    public Set<Pharmacyorder> getPharmacyordersForStaffId() {
        return this.pharmacyordersForStaffId;
    }
    
    public void setPharmacyordersForStaffId(Set<Pharmacyorder> pharmacyordersForStaffId) {
        this.pharmacyordersForStaffId = pharmacyordersForStaffId;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="stafftableByDispensedBy")
    public Set<Pharmacyorder> getPharmacyordersForDispensedBy() {
        return this.pharmacyordersForDispensedBy;
    }
    
    public void setPharmacyordersForDispensedBy(Set<Pharmacyorder> pharmacyordersForDispensedBy) {
        this.pharmacyordersForDispensedBy = pharmacyordersForDispensedBy;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="stafftableByPharmacist")
    public Set<Pharmacyorder> getPharmacyordersForPharmacist() {
        return this.pharmacyordersForPharmacist;
    }
    
    public void setPharmacyordersForPharmacist(Set<Pharmacyorder> pharmacyordersForPharmacist) {
        this.pharmacyordersForPharmacist = pharmacyordersForPharmacist;
    }




}


