package entities;
// Generated Nov 29, 2013 11:26:33 AM by Hibernate Tools 3.2.1.GA


import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Patienttreatment generated by hbm2java
 */
@Entity
@Table(name="patienttreatment"
    ,catalog="extended"
)
public class Patienttreatment  implements java.io.Serializable {


     private Integer id;
     private TransitionOrder transitionOrder;
     private Dosage dosage;
     private PharmacyItem pharmacyItem;
     private Pharmacyorder pharmacyorder;
     private DispensaryItems dispensaryItems;
     private Pharmorder pharmorder;
     private int treatmentid;
     private int visitationid;
     private double price;
     private String duration;
     private Integer quantity;
     private String dispensed;
     private Double amounpaid;
     private Boolean copaid;
     private Boolean isPrivate;
     private Double secondaryAmount;
     private Double privateAmount;
     private Double vatValue;
     private Double netValue;
     private Double total;
     private Set<PatientTreatmentBatch> patientTreatmentBatchs = new HashSet<PatientTreatmentBatch>(0);

    public Patienttreatment() {
    }

	
    public Patienttreatment(Dosage dosage, Pharmorder pharmorder, int treatmentid, int visitationid, double price, String dispensed) {
        this.dosage = dosage;
        this.pharmorder = pharmorder;
        this.treatmentid = treatmentid;
        this.visitationid = visitationid;
        this.price = price;
        this.dispensed = dispensed;
    }
    public Patienttreatment(TransitionOrder transitionOrder, Dosage dosage, PharmacyItem pharmacyItem, Pharmacyorder pharmacyorder, DispensaryItems dispensaryItems, Pharmorder pharmorder, int treatmentid, int visitationid, double price, String duration, Integer quantity, String dispensed, Double amounpaid, Boolean copaid, Boolean isPrivate, Double secondaryAmount, Double privateAmount, Double vatValue, Double netValue, Double total, Set<PatientTreatmentBatch> patientTreatmentBatchs) {
       this.transitionOrder = transitionOrder;
       this.dosage = dosage;
       this.pharmacyItem = pharmacyItem;
       this.pharmacyorder = pharmacyorder;
       this.dispensaryItems = dispensaryItems;
       this.pharmorder = pharmorder;
       this.treatmentid = treatmentid;
       this.visitationid = visitationid;
       this.price = price;
       this.duration = duration;
       this.quantity = quantity;
       this.dispensed = dispensed;
       this.amounpaid = amounpaid;
       this.copaid = copaid;
       this.isPrivate = isPrivate;
       this.secondaryAmount = secondaryAmount;
       this.privateAmount = privateAmount;
       this.vatValue = vatValue;
       this.netValue = netValue;
       this.total = total;
       this.patientTreatmentBatchs = patientTreatmentBatchs;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)
    
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="transition_id")
    public TransitionOrder getTransitionOrder() {
        return this.transitionOrder;
    }
    
    public void setTransitionOrder(TransitionOrder transitionOrder) {
        this.transitionOrder = transitionOrder;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="dosage", nullable=false)
    public Dosage getDosage() {
        return this.dosage;
    }
    
    public void setDosage(Dosage dosage) {
        this.dosage = dosage;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="pharmacy_item_code")
    public PharmacyItem getPharmacyItem() {
        return this.pharmacyItem;
    }
    
    public void setPharmacyItem(PharmacyItem pharmacyItem) {
        this.pharmacyItem = pharmacyItem;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="pharmacy_order_id")
    public Pharmacyorder getPharmacyorder() {
        return this.pharmacyorder;
    }
    
    public void setPharmacyorder(Pharmacyorder pharmacyorder) {
        this.pharmacyorder = pharmacyorder;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="dispensary_item_code")
    public DispensaryItems getDispensaryItems() {
        return this.dispensaryItems;
    }
    
    public void setDispensaryItems(DispensaryItems dispensaryItems) {
        this.dispensaryItems = dispensaryItems;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="orderid", nullable=false)
    public Pharmorder getPharmorder() {
        return this.pharmorder;
    }
    
    public void setPharmorder(Pharmorder pharmorder) {
        this.pharmorder = pharmorder;
    }
    
    @Column(name="treatmentid", nullable=false)
    public int getTreatmentid() {
        return this.treatmentid;
    }
    
    public void setTreatmentid(int treatmentid) {
        this.treatmentid = treatmentid;
    }
    
    @Column(name="visitationid", nullable=false)
    public int getVisitationid() {
        return this.visitationid;
    }
    
    public void setVisitationid(int visitationid) {
        this.visitationid = visitationid;
    }
    
    @Column(name="price", nullable=false, precision=22, scale=0)
    public double getPrice() {
        return this.price;
    }
    
    public void setPrice(double price) {
        this.price = price;
    }
    
    @Column(name="duration")
    public String getDuration() {
        return this.duration;
    }
    
    public void setDuration(String duration) {
        this.duration = duration;
    }
    
    @Column(name="quantity")
    public Integer getQuantity() {
        return this.quantity;
    }
    
    public void setQuantity(Integer quantity) {
        this.quantity = quantity;
    }
    
    @Column(name="dispensed", nullable=false, length=10)
    public String getDispensed() {
        return this.dispensed;
    }
    
    public void setDispensed(String dispensed) {
        this.dispensed = dispensed;
    }
    
    @Column(name="amounpaid", precision=22, scale=0)
    public Double getAmounpaid() {
        return this.amounpaid;
    }
    
    public void setAmounpaid(Double amounpaid) {
        this.amounpaid = amounpaid;
    }
    
    @Column(name="copaid")
    public Boolean getCopaid() {
        return this.copaid;
    }
    
    public void setCopaid(Boolean copaid) {
        this.copaid = copaid;
    }
    
    @Column(name="is_private")
    public Boolean getIsPrivate() {
        return this.isPrivate;
    }
    
    public void setIsPrivate(Boolean isPrivate) {
        this.isPrivate = isPrivate;
    }
    
    @Column(name="secondary_amount", precision=22, scale=0)
    public Double getSecondaryAmount() {
        return this.secondaryAmount;
    }
    
    public void setSecondaryAmount(Double secondaryAmount) {
        this.secondaryAmount = secondaryAmount;
    }
    
    @Column(name="private_amount", precision=22, scale=0)
    public Double getPrivateAmount() {
        return this.privateAmount;
    }
    
    public void setPrivateAmount(Double privateAmount) {
        this.privateAmount = privateAmount;
    }
    
    @Column(name="vat_value", precision=22, scale=0)
    public Double getVatValue() {
        return this.vatValue;
    }
    
    public void setVatValue(Double vatValue) {
        this.vatValue = vatValue;
    }
    
    @Column(name="net_value", precision=22, scale=0)
    public Double getNetValue() {
        return this.netValue;
    }
    
    public void setNetValue(Double netValue) {
        this.netValue = netValue;
    }
    
    @Column(name="total", precision=22, scale=0)
    public Double getTotal() {
        return this.total;
    }
    
    public void setTotal(Double total) {
        this.total = total;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="patienttreatment")
    public Set<PatientTreatmentBatch> getPatientTreatmentBatchs() {
        return this.patientTreatmentBatchs;
    }
    
    public void setPatientTreatmentBatchs(Set<PatientTreatmentBatch> patientTreatmentBatchs) {
        this.patientTreatmentBatchs = patientTreatmentBatchs;
    }




}


