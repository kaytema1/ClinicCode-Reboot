package entities;
// Generated Nov 29, 2013 11:26:33 AM by Hibernate Tools 3.2.1.GA


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Invoice generated by hbm2java
 */
@Entity
@Table(name="invoice"
    ,catalog="extended"
)
public class Invoice  implements java.io.Serializable {


     private Integer invoiceId;
     private Stafftable stafftable;
     private Supplier supplier;
     private PurchaseOrder purchaseOrder;
     private String supplierInvoice;
     private Double vatValue;
     private double percentageDiscount;
     private double priceDiscount;
     private String comment;
     private Date invoiceDate;
     private Date dateReceived;
     private double invoiceAmount;
     private double netTotal;
     private double taxAmount;
     private Set<PharmacyBatch> pharmacyBatchs = new HashSet<PharmacyBatch>(0);
     private Set<LaboratoryBatch> laboratoryBatchs = new HashSet<LaboratoryBatch>(0);
     private Set<DispensaryBatch> dispensaryBatchs = new HashSet<DispensaryBatch>(0);
     private Set<ItemBatch> itemBatchs = new HashSet<ItemBatch>(0);

    public Invoice() {
    }

	
    public Invoice(Stafftable stafftable, Supplier supplier, PurchaseOrder purchaseOrder, String supplierInvoice, double percentageDiscount, double priceDiscount, Date invoiceDate, Date dateReceived, double invoiceAmount, double netTotal, double taxAmount) {
        this.stafftable = stafftable;
        this.supplier = supplier;
        this.purchaseOrder = purchaseOrder;
        this.supplierInvoice = supplierInvoice;
        this.percentageDiscount = percentageDiscount;
        this.priceDiscount = priceDiscount;
        this.invoiceDate = invoiceDate;
        this.dateReceived = dateReceived;
        this.invoiceAmount = invoiceAmount;
        this.netTotal = netTotal;
        this.taxAmount = taxAmount;
    }
    public Invoice(Stafftable stafftable, Supplier supplier, PurchaseOrder purchaseOrder, String supplierInvoice, Double vatValue, double percentageDiscount, double priceDiscount, String comment, Date invoiceDate, Date dateReceived, double invoiceAmount, double netTotal, double taxAmount, Set<PharmacyBatch> pharmacyBatchs, Set<LaboratoryBatch> laboratoryBatchs, Set<DispensaryBatch> dispensaryBatchs, Set<ItemBatch> itemBatchs) {
       this.stafftable = stafftable;
       this.supplier = supplier;
       this.purchaseOrder = purchaseOrder;
       this.supplierInvoice = supplierInvoice;
       this.vatValue = vatValue;
       this.percentageDiscount = percentageDiscount;
       this.priceDiscount = priceDiscount;
       this.comment = comment;
       this.invoiceDate = invoiceDate;
       this.dateReceived = dateReceived;
       this.invoiceAmount = invoiceAmount;
       this.netTotal = netTotal;
       this.taxAmount = taxAmount;
       this.pharmacyBatchs = pharmacyBatchs;
       this.laboratoryBatchs = laboratoryBatchs;
       this.dispensaryBatchs = dispensaryBatchs;
       this.itemBatchs = itemBatchs;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)
    
    @Column(name="invoice_id", unique=true, nullable=false)
    public Integer getInvoiceId() {
        return this.invoiceId;
    }
    
    public void setInvoiceId(Integer invoiceId) {
        this.invoiceId = invoiceId;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="received_by", nullable=false)
    public Stafftable getStafftable() {
        return this.stafftable;
    }
    
    public void setStafftable(Stafftable stafftable) {
        this.stafftable = stafftable;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="supplier_id", nullable=false)
    public Supplier getSupplier() {
        return this.supplier;
    }
    
    public void setSupplier(Supplier supplier) {
        this.supplier = supplier;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="orderid", nullable=false)
    public PurchaseOrder getPurchaseOrder() {
        return this.purchaseOrder;
    }
    
    public void setPurchaseOrder(PurchaseOrder purchaseOrder) {
        this.purchaseOrder = purchaseOrder;
    }
    
    @Column(name="supplier_invoice", nullable=false)
    public String getSupplierInvoice() {
        return this.supplierInvoice;
    }
    
    public void setSupplierInvoice(String supplierInvoice) {
        this.supplierInvoice = supplierInvoice;
    }
    
    @Column(name="vat_value", precision=22, scale=0)
    public Double getVatValue() {
        return this.vatValue;
    }
    
    public void setVatValue(Double vatValue) {
        this.vatValue = vatValue;
    }
    
    @Column(name="percentage_discount", nullable=false, precision=22, scale=0)
    public double getPercentageDiscount() {
        return this.percentageDiscount;
    }
    
    public void setPercentageDiscount(double percentageDiscount) {
        this.percentageDiscount = percentageDiscount;
    }
    
    @Column(name="price_discount", nullable=false, precision=22, scale=0)
    public double getPriceDiscount() {
        return this.priceDiscount;
    }
    
    public void setPriceDiscount(double priceDiscount) {
        this.priceDiscount = priceDiscount;
    }
    
    @Column(name="comment", length=65535)
    public String getComment() {
        return this.comment;
    }
    
    public void setComment(String comment) {
        this.comment = comment;
    }
    @Temporal(TemporalType.DATE)
    @Column(name="invoice_date", nullable=false, length=10)
    public Date getInvoiceDate() {
        return this.invoiceDate;
    }
    
    public void setInvoiceDate(Date invoiceDate) {
        this.invoiceDate = invoiceDate;
    }
    @Temporal(TemporalType.DATE)
    @Column(name="date_received", nullable=false, length=10)
    public Date getDateReceived() {
        return this.dateReceived;
    }
    
    public void setDateReceived(Date dateReceived) {
        this.dateReceived = dateReceived;
    }
    
    @Column(name="invoice_amount", nullable=false, precision=22, scale=0)
    public double getInvoiceAmount() {
        return this.invoiceAmount;
    }
    
    public void setInvoiceAmount(double invoiceAmount) {
        this.invoiceAmount = invoiceAmount;
    }
    
    @Column(name="net_total", nullable=false, precision=22, scale=0)
    public double getNetTotal() {
        return this.netTotal;
    }
    
    public void setNetTotal(double netTotal) {
        this.netTotal = netTotal;
    }
    
    @Column(name="tax_amount", nullable=false, precision=22, scale=0)
    public double getTaxAmount() {
        return this.taxAmount;
    }
    
    public void setTaxAmount(double taxAmount) {
        this.taxAmount = taxAmount;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="invoice")
    public Set<PharmacyBatch> getPharmacyBatchs() {
        return this.pharmacyBatchs;
    }
    
    public void setPharmacyBatchs(Set<PharmacyBatch> pharmacyBatchs) {
        this.pharmacyBatchs = pharmacyBatchs;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="invoice")
    public Set<LaboratoryBatch> getLaboratoryBatchs() {
        return this.laboratoryBatchs;
    }
    
    public void setLaboratoryBatchs(Set<LaboratoryBatch> laboratoryBatchs) {
        this.laboratoryBatchs = laboratoryBatchs;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="invoice")
    public Set<DispensaryBatch> getDispensaryBatchs() {
        return this.dispensaryBatchs;
    }
    
    public void setDispensaryBatchs(Set<DispensaryBatch> dispensaryBatchs) {
        this.dispensaryBatchs = dispensaryBatchs;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="invoice")
    public Set<ItemBatch> getItemBatchs() {
        return this.itemBatchs;
    }
    
    public void setItemBatchs(Set<ItemBatch> itemBatchs) {
        this.itemBatchs = itemBatchs;
    }




}


